<!DOCTYPE html>
<html>
<head>
    <title>‰∏ä‰º†Êñá‰ª∂</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 500px;
            text-align: center;
        }
        .header {
            margin-bottom: 30px;
        }
        .header h1 {
            color: #333;
            margin: 0 0 10px 0;
        }
        .header p {
            color: #666;
            margin: 0;
            font-size: 16px;
        }
        .upload-area {
            border: 2px dashed #4CAF50;
            border-radius: 8px;
            padding: 40px 20px;
            margin: 20px 0;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }
        .upload-area.dragover {
            background-color: #e8f5e9;
            border-color: #2e7d32;
        }
        .upload-icon {
            font-size: 48px;
            color: #4CAF50;
            margin-bottom: 15px;
        }
        .upload-text {
            color: #666;
            margin: 10px 0;
        }
        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }
        .submit-button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
            margin-top: 20px;
            width: 100%;
        }
        .submit-button:hover {
            background-color: #45a049;
        }
        .submit-button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        .file-info {
            margin-top: 20px;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 4px;
            display: none;
        }
        .file-name {
            color: #333;
            font-weight: 500;
            word-break: break-all;
        }
        .file-size {
            color: #666;
            font-size: 14px;
            margin-top: 5px;
        }
        .error-message {
            color: #f44336;
            margin-top: 10px;
            display: none;
        }
        @media (max-width: 480px) {
            .container {
                padding: 20px;
            }
            .upload-area {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‰∏ä‰º†Êñá‰ª∂</h1>
            <p>ÈÄâÊã©ÊàñÊãñÊãΩÊñá‰ª∂Âà∞Ê≠§Â§Ñ‰∏ä‰º†</p>
        </div>
        <form action="/upload/<%= qrId %>" method="post" enctype="multipart/form-data" id="uploadForm">
            <div class="upload-area" id="uploadArea">
                <div class="upload-icon">üìÅ</div>
                <div class="upload-text">ÁÇπÂáªÊàñÊãñÊãΩÊñá‰ª∂Âà∞ËøôÈáå</div>
                <div class="upload-text" style="font-size: 14px;">
                    ÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûãÔºö<br>
                    ÂõæÁâá (JPG, PNG, GIF, WebP)<br>
                    Èü≥È¢ë (MP3, WAV, OGG)<br>
                    ËßÜÈ¢ë (MP4, WebM, QuickTime)
                </div>
                <input type="file" 
                    name="file" 
                    id="fileInput" 
                    class="file-input" 
                    accept="image/*,audio/*,video/*" 
                    required>
            </div>
            <div class="file-info" id="fileInfo">
                <div class="file-name" id="fileName"></div>
                <div class="file-size" id="fileSize"></div>
            </div>
            <div class="error-message" id="errorMessage"></div>
            <button type="submit" class="submit-button" id="submitButton" disabled>‰∏ä‰º†Êñá‰ª∂</button>
        </form>
    </div>

    <script>
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileInfo = document.getElementById('fileInfo');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const submitButton = document.getElementById('submitButton');
        const errorMessage = document.getElementById('errorMessage');
        const maxFileSize = <%= maxFileSize %>;

        // ÊãñÊãΩÊïàÊûú
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            uploadArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            uploadArea.classList.add('dragover');
        }

        function unhighlight(e) {
            uploadArea.classList.remove('dragover');
        }

        uploadArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            fileInput.files = files;
            handleFiles(files);
        }

        fileInput.addEventListener('change', function(e) {
            handleFiles(this.files);
        });

        function handleFiles(files) {
            if (files.length === 0) {
                resetFileInfo();
                return;
            }

            const file = files[0];
            const allowedTypes = [
                // ÂõæÁâáÁ±ªÂûã
                'image/jpeg', 'image/png', 'image/gif', 'image/webp',
                // Èü≥È¢ëÁ±ªÂûã
                'audio/mpeg', 'audio/wav', 'audio/ogg', 'audio/mp4',
                // ËßÜÈ¢ëÁ±ªÂûã
                'video/mp4', 'video/webm', 'video/ogg', 'video/quicktime'
            ];

            if (!allowedTypes.includes(file.type)) {
                showError('‰∏çÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã„ÄÇÂè™ÂÖÅËÆ∏‰∏ä‰º†ÂõæÁâá„ÄÅÈü≥È¢ëÂíåËßÜÈ¢ëÊñá‰ª∂„ÄÇ');
                resetFileInfo();
                return;
            }

            if (file.size > maxFileSize) {
                showError(`Êñá‰ª∂Â§ßÂ∞èË∂ÖËøáÈôêÂà∂ (${formatFileSize(maxFileSize)})`);
                resetFileInfo();
                return;
            }

            showFileInfo(file);
            hideError();
        }

        function showFileInfo(file) {
            let fileTypeIcon = 'üìÑ';
            if (file.type.startsWith('image/')) fileTypeIcon = 'üñºÔ∏è';
            if (file.type.startsWith('audio/')) fileTypeIcon = 'üéµ';
            if (file.type.startsWith('video/')) fileTypeIcon = 'üé•';

            fileName.textContent = `${fileTypeIcon} ${file.name}`;
            fileSize.textContent = formatFileSize(file.size);
            fileInfo.style.display = 'block';
            submitButton.disabled = false;
        }

        function resetFileInfo() {
            fileInput.value = '';
            fileInfo.style.display = 'none';
            submitButton.disabled = true;
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
        }

        function hideError() {
            errorMessage.style.display = 'none';
        }

        // Êèê‰∫§ÂâçÊ£ÄÊü•
        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            if (!fileInput.files.length) {
                e.preventDefault();
                showError('ËØ∑ÈÄâÊã©Ë¶Å‰∏ä‰º†ÁöÑÊñá‰ª∂');
            }
        });
    </script>
</body>
</html> 